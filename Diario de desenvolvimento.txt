


	####05/02/2020:    troubleshot of installation

	*Instalada biblioteca que possibilita programar o esp32 via arduino IDE.Para instalar usei o link:
	https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-mac-and-linux-instructions/

	*Para solucionar o problema do serial importing acesse o link:
	https://askubuntu.com/questions/741943/problem-in-import-installing-python-modules-pyserial-in-ubuntu-15

*Para solucionar o problema do ttyUSB0, usei o tutorial do link:
https://sudomod.com/forum/viewtopic.php?t=6075
sudo chmod a+rw /dev/ttyUSB0  toda vez que desconectar a porta, o que é bem bunda, o arduino mandou consultar:
https://playground.arduino.cc/Linux/All/#Permission
Outra coisa, aparentemente portas  'RTC' precisam ser desativadas antes de ser utilizadas como I/O

*https://randomnerdtutorials.com/esp32-pinout-reference-gpios/
Uma tabela mostrando as configs dos GPIOS

*https://playground.arduino.cc/Linux/All/#Permission

####21/02/2020:

1) Arrumar o problema de permissao do linux:
	echo $USER // Para mostrar o nome do seu usuario
	sudo usermod -a -G dialout nomedousuario    //Para permitir o acesso aos perifericos
	Reiniciar

2) Aprender a ler portas analógicas
	Tambem chamadas de portas ADC
	As leituras são efetuadas de 0 - 3.3 V
	Resolução de 4095

3) Aprender a escrever em portas pwm
	Exercicio PWM e led com potenciometro











####02/03/2020:

1)Aprender a usar a comunicação I2C como mestre! Para isso, ESP 32 sera comunicado com um ds1307.
	*https://randomnerdtutorials.com/esp32-i2c-communication-arduino-ide/
		*https://randomnerdtutorials.com/esp32-pinout-reference-gpios/
	Estes sites nos diz que GPIO21 = SDA E GPIO 22 = SCL
	A biblioteca wire.h parece funcionar da maneira convencional.
	Este site parece usar um metodo muiiito interessante para escanear um dispositivo I2C. basicamente, a logica é que um endereço vai de 0 -> 127 pois na comunicacao i2c temos 7 bits de endereço e o mais significativo e de leitura ou escrita (8 bits no total = 1 B)
		*https://www.sparkfun.com/datasheets/Components/DS1307.pdf
		Datasheet do ds1307
		Read_address = 232
		Write_address = 104
		Segundos  = 0;
		Formato codificado.



















#### 03/03/2020:

	1)Primeiros passos sobre a conexao wifi:
		-Como funciona?
		-É seguro?
		-O que esta biblioteca faz?
*https://techtutorialsx.com/2017/04/24/esp32-connecting-to-a-wifi-network/
Ensinou a utilizar a biblioteca WiFi.h para se conectar à rede wifi existente.

*https://www.arduino.cc/en/Reference/WiFiStatus
Conferindo os diferentes retornos da funcao WiFi.status().























#### 05/03/2020

	1 )A ideia é aprender a comunicar bem via biblioteca wifi e depois entende-la otimizando o processo de latencia e segurança.

* https://rntlab.com/question/best-way-to-communicate-between-esp32-and-pc/
	Este link comenta sobre diferentes maneiras de fazer uma conexao esp32 - computador.

* https://randomnerdtutorials.com/esp32-web-server-arduino-ide/
	Este link ensina a ligar leds do computador ou do celular, enfim qualquer disp de rede 
		Serial.println(WiFi.localIP()); //colocado apos a conexao e serve para printar seu IP local
		server.begin();  //Inicia o servidor
		
		no loop
		WiFiClient client = server.available(); // Listen for incoming clients WiFiClient é um tipo de objeto criado pela biblioteca
			Se o client for 0 - ninguem se conectou, se for 1, alguem se conectou
		client.connected é 1 quando o client continua conectado
		client.available() é dif de 0 qndo tem byte para ler
		client.read() lê o byte.
	Neste link ainda é ensinado como criar e estilizar um pouco a pagina web. Aparentemente tudo segue uma programação html

*https://randomnerdtutorials.com/esp32-dht11-dht22-temperature-humidity-web-server-arduino-ide/
	Usa outras bibliotecas para fazer um webserver assincrono




















####09/03/2020:


	
Em uma reunião, um membro comentou sobre a integrabilidade do tensorflow com o micropython.
	O micropython é uma ferramenta que pouco explorei, porém, integrar o tf facilita demais no percurso e densenvolvimento de uma AI já que nele temos o otimizador e ferramentas matriciais já integrado.


							!!!!)  Estudar um pouco sobre o micropython e até testá-lo para os casos comuns.




























####10/03/2020

	Encontrei no meu pendrive, alguns codigos demonstração do curso de arduino.
	Aproveitei para salvá-lo nesse mesmo repo, ja que um dos objetivos é o aprendizado de microcontrolador





























				#### 23/03/2020



					O objetivo de hoje é aprender sobre o micropython:
						10)O que é?
							Micropython é um metodo de programação interpretado por python, otmizado para embarcados.
							Desta forma o Micropython funciona tambem como um OS facilitando a utilização do hardware como um todo.
						20)Quais as bibliotecas disponiveis?
						30)Consigo controlar as funções do esp32 normalmente?
							Consigo, em real-time.


						40)Como programo?
							Uma vez instalado, voce acessa via terminal dois arquivos: boot.py e main.py
							boot.py funciona como a funcão setup
							main.py como a loop.

							Bibliotecas sao adicionadas ate onde sua memoria flash suporta

							Para acessar o portal de comando, usamos :
								picocom /dev/ttyUSB0 -b115200
								
								ctrl+D soft Reset

								import machine (todas as funcionalidades perifericas do esp 32)
								p = Pin(<GPIO>,Pin.OUT)
								p.value(<1/0>)

							*https://www.youtube.com/watch?v=QopRAwUP5ds
								ctrl +A ctrl + x      exit pipocom


								Usar o ampy para loudar arquivos do linux para o micropython os

									ampy -p /dev/ttyUSB0 <comandos> para usar um comando do linux x python na porta ttyUSB0 os comandos sao parecidos com o do linux

							
						50)Como instalá-lo?

							*https://docs.micropython.org/en/latest/esp32/tutorial/intro.html
								Baixa um binario		
								Instala no linux o esptool.py
								esptool.py --port /dev/ttyUSB0 erase_flash
								esptool.py --chip esp32 --port /dev/ttyUSB0 write_flash -z 0x1000 <Diretorio do arquivo>
							*https://docs.micropython.org/en/latest/esp8266/tutorial/repl.html
								sudo apt-get install picocom
							*https://core-electronics.com.au/tutorials/copy-files-to-micropython.html
								pip install adafruit-ampy



					Agora que ja sabemos como proseguir, vamos em frente?

					A ideia é blinkar um led da porta 13 de 1 em 1 segundo
					
					Uma nova pasta sera colocada no repositorio : esp32_micropython


					
						


























#### 24/03/2020:


	O objetivo de hoje:
	
		
		05)Tensorflow para microcontroladores. O que é? e como instalá-lo

			*https://www.tensorflow.org/lite/microcontrollers
				Este site explica o que é o tensorflow-lite e mostra as compatibilidades. O esp32 É compativel... Porem somento o devkit2 e com ESP IDF


	!!!!) Nao vale a pena estudar micropython porque nenhuma biblioteca high-level é compatível. Fora isso, todas as bibliotecas do arduino serao perdidas e o arduino  é mais otmizado.
	????) O que é ESP IDF?
		ESP IDF é um pacote de ferramentas e biliotecas que fazem com que um editor e um compilador C++/C compile um codigo para o ESP32 da melhor forma possível.
		ESP IDF nao é uma IDE.. É um toolchain. Sem o toolchain nao é possível gravar os dados do seu programa no aparelho.


*https://docs.espressif.com/projects/esp-idf/en/latest/esp32/
	Este é o site da espressif que apresenta a ESP IDF. 

	!!!!)Nao parece valer a pena... Aparentemente voce programa em C++, instala um toochain da espressif e baixa um editor qlqr... 
		O problem se encontra na falta de suporte com o uso dessa IDF. Mesmo ela sendo mais rapida e eficaz que o arduino IDE, a diferença nao é tao grande a ponto de trocar suporte x qualidade.



					!!!!) Nao tem como correr... Em algum momento terei que desenvolver ferramentas algebricas para realizar o feed forward.


	Como nao tenho como processar os dados (eu nao tenho dados pois nao sei comunicar camera ainda, mas vamos supor que eu tivesse), vou focar em garantir o canal de comunicação. Ou seja, daqui pra frente utilizarei o arduino  IDE, bluetooth ou wifi para comunicar o computador ao esp 32.
	Comunicar-se com o computador é uma forma de evitar ter que desenvolver algoritmos de otimização e também, vai facilitar o data science.



	Honestamente:
		
		10)Como desenvolver um algortimo em python no computador que se comunica com o esp32 ou outro dispositivo?

		20)Aprender e criar uma interface grafica

		30)Aprender banco de dados (basico pelo menos)

		40)Aprender o BLE ou bluetooth do ESP 32


			50)Como orientar objetos em C++ ?

			60) O que são Callback functions?

		70)Aprender a comunicar wifi com o esp32

			80)Segurança de dados (basica).




		




#### 13/04/2020:
	Estabelecimento de metas.
	


------------------------------------------------------------------------------------Metas de Abril 2020-------------------------------------------------------------------------------------------

O objetivo daqui pra frente é criar o canal de comunicação entre o desktop e o esp32 ou arduino. Um dos canais consideraveis é o bluetooth.
	Primeiras considerações:
		->Bluetooth é uma maneira segura de nao contar com wifi de locais e comunicar-se via wireless.
		->Como faço segurança de dados? Segurança de dados pode ser importante para proteger a equipe
		->Aparentemente o servidor é baseado no TCP-IP.Nao sei o que é tcp-ip
		*Os topicos anteriores exigem conhecimento em web Backend -- tudo esta levando a crer que talvez seja uma boa ideia estudar WEB backend..
		->Terei que aprender frontend básico atraves de interface grafica...
		
	Ordem de implementacão:
		->Liberando o MVP - prototico - sem segurança de rede - sem inteface. Um programinha que troque alguma informaçãozinha via BLUETOOTH  (Aprender BLE no esp32 tambem sera necessario)
		->Comunicar o prototipo MVP com o esp32 e ver se consigo transmitir todos os dados que preciso : pode ser do desktop para o esp -- uma rede neural convolucional e ver quanto tempo leva.
		->Testar TinyML que prometeu um tensorflow lite para esp32.
		->Testar com dois ultrasons : Qual lado o robo deve virar? Testar via NNFC
		->Como treinar uma rede para aprender estrategias?
		->Aprendendo TCP_IP!!		
		->Aprendendo Backend!!
		->Aprendendo Frontend!!
		->Robo perseguidor de caixas de leite 1.0v!!!!
		

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#### 13/04/2020
	->Bluetooth é uma maneira segura de nao contar com wifi de locais e comunicar-se via wireless.
		Existem bibliotecas que cortam caminho e nos ajudam a tirar um versionamento rapido. Primeira biblioteca que pretendo pesquisar é 'bluetool'.
			*https://pypi.org/project/bluetool/





































